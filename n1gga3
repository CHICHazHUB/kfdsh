local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==4) then v39=nil;function v39(...)return {...},v20("#",...);end v40=nil;function v40()local v43=0;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==3) then for v90=2 -1 ,v35() do v45[v90-1 ]=v40();end return v47;end if (v43==0) then v44={};v45={};v46={};v43=1;end if (1==v43) then v47={v44,v45,nil,v46};v48=v35();v49={};v43=2;end if (v43==2) then for v92=1,v48 do local v93=0;local v94;local v95;while true do if (v93==0) then v94=v33();v95=nil;v93=1;end if (v93==1) then if (v94==1) then v95=v33()~=0 ;elseif (v94==2) then v95=v36();elseif (v94==3) then v95=v37();end v49[v92]=v95;break;end end end v47[7 -4 ]=v33();for v96=1,v35() do local v97=0;local v98;while true do if (v97==0) then v98=v33();if (v32(v98,620 -(555 + 64) ,1)==0) then local v128=v32(v98,2,3);local v129=v32(v98,4,6);local v130={v34(),v34(),nil,nil};if (v128==(931 -(857 + 74))) then local v132=0;while true do if (v132==0) then v130[3]=v34();v130[1142 -(116 + 1022) ]=v34();break;end end elseif (v128==1) then v130[3]=v35();elseif (v128==(570 -(367 + 201))) then v130[930 -(214 + 713) ]=v35() -(2^16) ;elseif (v128==(2 + 1)) then local v143=0;while true do if (0==v143) then v130[3]=v35() -(2^16) ;v130[4]=v34();break;end end end if (v32(v129,1,1)==1) then v130[7 -5 ]=v49[v130[2]];end if (v32(v129,2,2)==1) then v130[1 + 2 ]=v49[v130[3]];end if (v32(v129,10 -7 ,3)==(1 + 0)) then v130[4]=v49[v130[4]];end v44[v96]=v130;end break;end end end v43=3;end end end v29=5;end if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\118\72","\141\88\102\109"),function(v50)if (v9(v50,2)==79) then v31=v8(v11(v50,1487 -(998 + 488) ,1));return "";else local v81=0;local v82;while true do if (v81==0) then v82=v10(v8(v50,16));if v31 then local v120=0;local v121;while true do if (1==v120) then return v121;end if (v120==0) then v121=v13(v82,v31);v31=nil;v120=1;end end else return v82;end break;end end end end);v32=nil;v29=1;end if (v29==2) then function v34()local v51=0;local v52;local v53;while true do if (v51==1) then return (v53 * 256) + v52 ;end if (v51==0) then v52,v53=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;v51=1;end end end v35=nil;function v35()local v54=0;local v55;local v56;local v57;local v58;while true do if (v54==0) then v55,v56,v57,v58=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;v54=1;end if (v54==1) then return (v58 * 16777216) + (v57 * 65536) + (v56 * 256) + v55 ;end end end v36=nil;v29=3;end if (v29==3) then function v36()local v59=v35();local v60=v35();local v61=1;local v62=(v32(v60,1,20) * (2^32)) + v59 ;local v63=v32(v60,21,31);local v64=((v32(v60,91 -59 )==1) and  -1) or 1 ;if (v63==0) then if (v62==0) then return v64 * 0 ;else local v99=0;while true do if (v99==0) then v63=1 + 0 ;v61=0;break;end end end elseif (v63==2047) then return ((v62==0) and (v64 * (1/0))) or (v64 * NaN) ;end return v16(v64,v63-(838 + 185) ) * (v61 + (v62/(2^52))) ;end v37=nil;function v37(v65)local v66=0;local v67;local v68;while true do if (v66==0) then v67=nil;if  not v65 then local v116=0;while true do if (v116==0) then v65=v35();if (v65==(0 -0)) then return "";end break;end end end v66=1;end if (v66==2) then v68={};for v100=1, #v67 do v68[v100]=v10(v9(v11(v67,v100,v100)));end v66=3;end if (v66==3) then return v14(v68);end if (v66==1) then v67=v11(v27,v30,(v30 + v65) -1 );v30=v30 + v65 ;v66=2;end end end v38=v35;v29=4;end if (v29==5) then v41=nil;function v41(v69,v70,v71)local v72=0;local v73;local v74;local v75;while true do if (v72==0) then v73=v69[1];v74=v69[879 -(282 + 595) ];v72=1;end if (v72==1) then v75=v69[3];return function(...)local v102=v73;local v103=v74;local v104=v75;local v105=v39;local v106=1;local v107= -1;local v108={};local v109={...};local v110=v20("#",...) -1 ;local v111={};local v112={};for v117=0,v110 do if (v117>=v104) then v108[v117-v104 ]=v109[v117 + 1 ];else v112[v117]=v109[v117 + 1 ];end end local v113=(v110-v104) + 1 ;local v114;local v115;while true do local v118=0;while true do if (0==v118) then v114=v102[v106];v115=v114[1];v118=1;end if (1==v118) then if (v115<=46) then if (v115<=(8 + 14)) then if (v115<=10) then if (v115<=(889 -(261 + 624))) then if (v115<=(1 -0)) then if (v115>0) then local v146=0;local v147;while true do if (v146==0) then v147=v114[2];v112[v147]=v112[v147](v21(v112,v147 + 1 ,v107));break;end end else v112[v114[1639 -(1523 + 114) ]]=v112[v114[1083 -(1020 + 60) ]][v114[1427 -(630 + 793) ]];end elseif (v115<=2) then v112[v114[2]][v114[3]]=v112[v114[4]];elseif (v115==3) then for v335=v114[2],v114[3] do v112[v335]=nil;end else local v211=0;local v212;local v213;while true do if (1==v211) then v112[v212 + 1 ]=v213;v112[v212]=v213[v114[4]];break;end if (v211==0) then v212=v114[2];v213=v112[v114[3 + 0 ]];v211=1;end end end elseif (v115<=7) then if (v115<=5) then local v152=0;local v153;while true do if (v152==0) then v153=v114[2];v112[v153](v21(v112,v153 + (1 -0) ,v114[3]));break;end end elseif (v115>6) then local v214=0;local v215;while true do if (v214==0) then v215=v114[2];v112[v215](v21(v112,v215 + 1 ,v107));break;end end else local v216=v114[2];local v217=v114[4];local v218=v216 + 2 ;local v219={v112[v216](v112[v216 + 1 ],v112[v218])};for v338=1,v217 do v112[v218 + v338 ]=v219[v338];end local v220=v219[1];if v220 then v112[v218]=v220;v106=v114[3];else v106=v106 + 1 ;end end elseif (v115<=(1073 -(68 + 997))) then v112[v114[2]]=v112[v114[3]] + v114[4] ;elseif (v115>(1279 -(226 + 1044))) then v112[v114[2]][v114[3]]=v112[v114[4]];else v112[v114[6 -4 ]]=v112[v114[14 -11 ]] * v112[v114[2 + 2 ]] ;end elseif (v115<=(69 -53)) then if (v115<=13) then if (v115<=11) then v112[v114[2]]=v112[v114[3]][v112[v114[121 -(32 + 85) ]]];elseif (v115>(12 + 0)) then v112[v114[2]]= #v112[v114[3]];else local v225=0;local v226;while true do if (v225==0) then v226=v114[2];v112[v226]=v112[v226]();break;end end end elseif (v115<=14) then if (v112[v114[2]]==v114[4]) then v106=v106 + 1 ;else v106=v114[3];end elseif (v115==15) then if (v112[v114[2]]==v112[v114[4]]) then v106=v106 + (3 -2) ;else v106=v114[3];end else local v228=v114[2];v112[v228]=v112[v228](v112[v228 + 1 + 0 ]);end elseif (v115<=19) then if (v115<=17) then local v157=0;local v158;while true do if (v157==0) then v158=v114[2];do return v112[v158](v21(v112,v158 + (958 -(892 + 65)) ,v114[3]));end break;end end elseif (v115>(1765 -(760 + 987))) then local v230=0;local v231;local v232;local v233;local v234;while true do if (2==v230) then for v416=v231,v107 do local v417=0;while true do if (v417==0) then v234=v234 + (1914 -(1789 + 124)) ;v112[v416]=v232[v234];break;end end end break;end if (v230==1) then v107=(v233 + v231) -1 ;v234=0;v230=2;end if (v230==0) then v231=v114[2];v232,v233=v105(v112[v231](v21(v112,v231 + 1 ,v107)));v230=1;end end else do return v112[v114[2]]();end end elseif (v115<=20) then local v159=v114[2];local v160=v112[v159 + 2 ];local v161=v112[v159] + v160 ;v112[v159]=v161;if (v160>0) then if (v161<=v112[v159 + 1 ]) then local v363=0;while true do if (v363==0) then v106=v114[3];v112[v159 + 3 ]=v161;break;end end end elseif (v161>=v112[v159 + 1 ]) then local v364=0;while true do if (v364==0) then v106=v114[3];v112[v159 + 3 ]=v161;break;end end end elseif (v115>21) then local v235=0;local v236;local v237;local v238;while true do if (v235==1) then v238=0;for v418=v236,v114[770 -(745 + 21) ] do v238=v238 + 1 ;v112[v418]=v237[v238];end break;end if (0==v235) then v236=v114[2];v237={v112[v236](v21(v112,v236 + (2 -1) ,v107))};v235=1;end end elseif ((v114[3]==v7("\140\118\228\70","\161\211\51\170\16\122\93\53")) or (v114[3]==v7("\252\171\166\46\254\160\164","\72\155\206\210"))) then v112[v114[2]]=v71;else v112[v114[2]]=v71[v114[2 + 1 ]];end elseif (v115<=34) then if (v115<=28) then if (v115<=(46 -21)) then if (v115<=23) then v112[v114[2]]();elseif (v115==24) then local v239=v114[2];v112[v239]=v112[v239](v112[v239 + (1 -0) ]);else local v241=v114[2];local v242={v112[v241](v21(v112,v241 + (351 -(87 + 263)) ,v107))};local v243=0;for v342=v241,v114[10 -6 ] do local v343=0;while true do if (v343==0) then v243=v243 + 1 ;v112[v342]=v242[v243];break;end end end end elseif (v115<=26) then v112[v114[2]]=v114[3] + v112[v114[4]] ;elseif (v115==27) then local v244=0;local v245;while true do if (v244==0) then v245=v114[2];v112[v245]=v112[v245](v21(v112,v245 + 1 ,v114[3]));break;end end else do return v112[v114[2]]();end end elseif (v115<=31) then if (v115<=29) then local v164=0;local v165;local v166;local v167;local v168;while true do if (v164==1) then v107=(v167 + v165) -1 ;v168=0;v164=2;end if (v164==0) then v165=v114[7 -5 ];v166,v167=v105(v112[v165](v21(v112,v165 + 1 ,v107)));v164=1;end if (v164==2) then for v368=v165,v107 do local v369=0;while true do if (v369==0) then v168=v168 + 1 ;v112[v368]=v166[v168];break;end end end break;end end elseif (v115==30) then v112[v114[2]]= #v112[v114[3]];else local v247=0;local v248;local v249;local v250;while true do if (v247==0) then v248=v103[v114[3]];v249=nil;v247=1;end if (2==v247) then for v423=1,v114[4] do local v424=0;local v425;while true do if (v424==0) then v106=v106 + 1 ;v425=v102[v106];v424=1;end if (v424==1) then if (v425[1]==(217 -(67 + 113))) then v250[v423-1 ]={v112,v425[3]};else v250[v423-1 ]={v70,v425[3]};end v111[ #v111 + 1 ]=v250;break;end end end v112[v114[1057 -(87 + 968) ]]=v41(v248,v249,v71);break;end if (v247==1) then v250={};v249=v18({},{[v7("\121\69\93\0\55\67\98","\83\38\26\52\110")]=function(v426,v427)local v428=0;local v429;while true do if (v428==0) then v429=v250[v427];return v429[1][v429[2]];end end end,[v7("\103\40\41\67\79\30\41\66\93\15","\38\56\119\71")]=function(v430,v431,v432)local v433=v250[v431];v433[1][v433[2]]=v432;end});v247=2;end end end elseif (v115<=32) then local v169=0;local v170;local v171;while true do if (v169==1) then for v370=v170 + 1 ,v107 do v15(v171,v112[v370]);end break;end if (v169==0) then v170=v114[2];v171=v112[v170];v169=1;end end elseif (v115>33) then local v251=0;local v252;while true do if (v251==0) then v252=v114[2 + 0 ];do return v112[v252](v21(v112,v252 + 1 ,v114[13 -10 ]));end break;end end else local v253=v114[2 + 0 ];local v254,v255=v105(v112[v253](v112[v253 + 1 ]));v107=(v255 + v253) -(2 -1) ;local v256=0 -0 ;for v347=v253,v107 do local v348=0;while true do if (v348==0) then v256=v256 + 1 ;v112[v347]=v254[v256];break;end end end end elseif (v115<=40) then if (v115<=(28 + 9)) then if (v115<=35) then do return;end elseif (v115==36) then v71[v114[3]]=v112[v114[2]];else v112[v114[2]]=v112[v114[3]];end elseif (v115<=38) then v112[v114[7 -5 ]]=v114[3];elseif (v115==(106 -67)) then v112[v114[2]]=v112[v114[3]]%v112[v114[4]] ;else v112[v114[2]]=v112[v114[3]] + v114[4] ;end elseif (v115<=43) then if (v115<=41) then v112[v114[954 -(802 + 150) ]]={};elseif (v115>42) then v106=v114[3];else v106=v114[3];end elseif (v115<=44) then local v175=0;local v176;while true do if (v175==0) then v176=v114[2];v112[v176]=v112[v176](v21(v112,v176 + 1 ,v107));break;end end elseif (v115==45) then local v265=0;local v266;while true do if (v265==0) then v266=v114[2];v112[v266](v112[v266 + 1 ]);break;end end else v112[v114[2]][v114[3]]=v114[705 -(376 + 325) ];end elseif (v115<=69) then if (v115<=57) then if (v115<=(83 -32)) then if (v115<=48) then if (v115>47) then local v177=v114[5 -3 ];do return v21(v112,v177,v107);end else local v178=0;local v179;local v180;local v181;while true do if (v178==0) then v179=v114[2];v180=v112[v179];v178=1;end if (1==v178) then v181=v112[v179 + 2 ];if (v181>0) then if (v180>v112[v179 + 1 ]) then v106=v114[3];else v112[v179 + 3 ]=v180;end elseif (v180<v112[v179 + 1 ]) then v106=v114[3];else v112[v179 + 3 ]=v180;end break;end end end elseif (v115<=49) then v112[v114[2]][v114[3]]=v114[4];elseif (v115==(90 -40)) then local v269=0;local v270;local v271;local v272;while true do if (0==v269) then v270=v114[2];v271=v112[v270];v269=1;end if (1==v269) then v272=v112[v270 + 2 ];if (v272>(0 + 0)) then if (v271>v112[v270 + 1 ]) then v106=v114[3];else v112[v270 + 3 ]=v271;end elseif (v271<v112[v270 + 1 ]) then v106=v114[3];else v112[v270 + (8 -5) ]=v271;end break;end end else v112[v114[2]]={};end elseif (v115<=54) then if (v115<=52) then v112[v114[999 -(915 + 82) ]]=v114[3]~=0 ;elseif (v115==53) then v112[v114[2]]=v114[8 -5 ]~=0 ;else v112[v114[2]]=v114[3] + v112[v114[4]] ;end elseif (v115<=55) then v112[v114[4 -2 ]]=v112[v114[3]]%v112[v114[4]] ;elseif (v115==(33 + 23)) then v71[v114[3]]=v112[v114[2 -0 ]];else for v354=v114[1189 -(1069 + 118) ],v114[3] do v112[v354]=nil;end end elseif (v115<=63) then if (v115<=60) then if (v115<=58) then if (v114[2]==v112[v114[8 -4 ]]) then v106=v106 + 1 ;else v106=v114[3];end elseif (v115==59) then local v279=0;local v280;local v281;local v282;local v283;while true do if (v279==1) then v107=(v282 + v280) -(3 -2) ;v283=0;v279=2;end if (v279==2) then for v437=v280,v107 do local v438=0;while true do if (v438==0) then v283=v283 + 1 ;v112[v437]=v281[v283];break;end end end break;end if (v279==0) then v280=v114[2];v281,v282=v105(v112[v280](v21(v112,v280 + (1266 -(243 + 1022)) ,v114[3])));v279=1;end end elseif (v114[2 + 0 ]==v112[v114[1184 -(1123 + 57) ]]) then v106=v106 + 1 ;else v106=v114[3];end elseif (v115<=(133 -72)) then local v186=0;local v187;local v188;local v189;local v190;while true do if (0==v186) then v187=v114[2];v188,v189=v105(v112[v187]());v186=1;end if (v186==1) then v107=(v189 + v187) -1 ;v190=0;v186=2;end if (v186==2) then for v372=v187,v107 do local v373=0;while true do if (v373==0) then v190=v190 + 1 ;v112[v372]=v188[v190];break;end end end break;end end elseif (v115>62) then local v284=0;local v285;local v286;local v287;local v288;while true do if (0==v284) then v285=v114[2];v286,v287=v105(v112[v285](v112[v285 + 1 ]));v284=1;end if (v284==1) then v107=(v287 + v285) -1 ;v288=0 + 0 ;v284=2;end if (v284==2) then for v439=v285,v107 do v288=v288 + 1 ;v112[v439]=v286[v288];end break;end end else v112[v114[256 -(163 + 91) ]]=v112[v114[1 + 2 ]][v114[4]];end elseif (v115<=66) then if (v115<=64) then local v191=0;local v192;while true do if (v191==0) then v192=v114[2];do return v21(v112,v192,v107);end break;end end elseif (v115>65) then if v112[v114[2]] then v106=v106 + 1 ;else v106=v114[3];end else v112[v114[2]]=v112[v114[3]]%v114[4] ;end elseif (v115<=67) then v112[v114[1932 -(1869 + 61) ]]=v112[v114[3]];elseif (v115>(120 -52)) then if (v112[v114[2]]==v112[v114[4]]) then v106=v106 + 1 ;else v106=v114[3 + 0 ];end else local v292=0;local v293;local v294;local v295;local v296;while true do if (v292==2) then for v442=v293,v107 do local v443=0;while true do if (v443==0) then v296=v296 + 1 ;v112[v442]=v294[v296];break;end end end break;end if (v292==1) then v107=(v295 + v293) -1 ;v296=0 -0 ;v292=2;end if (v292==0) then v293=v114[6 -4 ];v294,v295=v105(v112[v293]());v292=1;end end end elseif (v115<=81) then if (v115<=75) then if (v115<=72) then if (v115<=(861 -(368 + 423))) then local v195=0;local v196;while true do if (v195==0) then v196=v114[2];v112[v196](v21(v112,v196 + 1 ,v107));break;end end elseif (v115==71) then local v297=0;local v298;while true do if (v297==0) then v298=v114[2];v112[v298]=v112[v298](v21(v112,v298 + 1 ,v114[3]));break;end end else v112[v114[2]]=v70[v114[3]];end elseif (v115<=73) then v112[v114[2]]=v70[v114[3]];elseif (v115>74) then local v301=0;local v302;local v303;while true do if (v301==1) then for v444=v302 + 1 ,v107 do v15(v303,v112[v444]);end break;end if (v301==0) then v302=v114[2];v303=v112[v302];v301=1;end end else v112[v114[2]]=v112[v114[3]]%v114[4] ;end elseif (v115<=(245 -167)) then if (v115<=76) then local v199=v114[2];local v200=v114[4];local v201=v199 + 2 ;local v202={v112[v199](v112[v199 + (1 -0) ],v112[v201])};for v208=1 + 0 ,v200 do v112[v201 + v208 ]=v202[v208];end local v203=v202[1];if v203 then local v305=0;while true do if (v305==0) then v112[v201]=v203;v106=v114[1477 -(1329 + 145) ];break;end end else v106=v106 + 1 ;end elseif (v115==77) then local v306=v114[2];v112[v306]=v112[v306]();else local v308=0;local v309;local v310;while true do if (v308==1) then v112[v309 + 1 ]=v310;v112[v309]=v310[v114[4]];break;end if (v308==0) then v309=v114[2];v310=v112[v114[3]];v308=1;end end end elseif (v115<=(1050 -(140 + 831))) then local v204=0;local v205;while true do if (v204==0) then v205=v114[2];v112[v205](v112[v205 + 1 ]);break;end end elseif (v115>80) then v112[v114[2]]=v112[v114[3]][v112[v114[4]]];elseif v112[v114[1852 -(1409 + 441) ]] then v106=v106 + 1 ;else v106=v114[3];end elseif (v115<=(105 -(10 + 8))) then if (v115<=84) then if (v115<=82) then if ((v114[3]==v7("\204\202\118\224","\54\147\143\56\182\69")) or (v114[3]==v7("\209\132\235\79\218\216\151","\191\182\225\159\41"))) then v112[v114[2]]=v71;else v112[v114[7 -5 ]]=v71[v114[3]];end elseif (v115==83) then local v316=v114[2];local v317=v112[v316 + (720 -(15 + 703)) ];local v318=v112[v316] + v317 ;v112[v316]=v318;if (v317>0) then if (v318<=v112[v316 + 1 ]) then v106=v114[3];v112[v316 + (445 -(416 + 26)) ]=v318;end elseif (v318>=v112[v316 + 1 ]) then local v447=0;while true do if (v447==0) then v106=v114[3];v112[v316 + 3 ]=v318;break;end end end else local v320=0;local v321;local v322;local v323;while true do if (v320==0) then v321=v103[v114[3]];v322=nil;v320=1;end if (v320==2) then for v448=1,v114[4] do local v449=0;local v450;while true do if (v449==1) then if (v450[1 + 0 ]==(475 -(262 + 176))) then v323[v448-1 ]={v112,v450[3]};else v323[v448-1 ]={v70,v450[3]};end v111[ #v111 + (1 -0) ]=v323;break;end if (v449==0) then v106=v106 + 1 ;v450=v102[v106];v449=1;end end end v112[v114[2]]=v41(v321,v322,v71);break;end if (v320==1) then v323={};v322=v18({},{[v7("\20\45\33\91\143\130\218","\162\75\114\72\53\235\231")]=function(v451,v452)local v453=0;local v454;while true do if (v453==0) then v454=v323[v452];return v454[3 -2 ][v454[2]];end end end,[v7("\179\3\74\231\68\11\130\56\65\250","\98\236\92\36\130\51")]=function(v455,v456,v457)local v458=v323[v456];v458[1 + 0 ][v458[2]]=v457;end});v320=2;end end end elseif (v115<=85) then if (v112[v114[2]]==v114[4]) then v106=v106 + 1 ;else v106=v114[3];end elseif (v115>86) then local v325=0;local v326;while true do if (v325==0) then v326=v114[2];v112[v326](v21(v112,v326 + 1 ,v114[3]));break;end end elseif  not v112[v114[2]] then v106=v106 + 1 ;else v106=v114[3];end elseif (v115<=(528 -(145 + 293))) then if (v115<=88) then v112[v114[690 -(198 + 490) ]]();elseif (v115>89) then local v327=0;local v328;local v329;local v330;local v331;while true do if (v327==1) then v107=(v330 + v328) -1 ;v331=0;v327=2;end if (v327==2) then for v460=v328,v107 do local v461=0;while true do if (v461==0) then v331=v331 + 1 ;v112[v460]=v329[v331];break;end end end break;end if (v327==0) then v328=v114[8 -6 ];v329,v330=v105(v112[v328](v21(v112,v328 + (2 -1) ,v114[3])));v327=1;end end else v112[v114[2]]=v112[v114[3]] * v112[v114[434 -(44 + 386) ]] ;end elseif (v115<=91) then v112[v114[2]]=v114[3];elseif (v115>92) then do return;end elseif  not v112[v114[2]] then v106=v106 + 1 ;else v106=v114[1209 -(696 + 510) ];end v106=v106 + 1 ;break;end end end end;end end end return v41(v40(),{},v28)(...);end if (v29==1) then function v32(v76,v77,v78)if v78 then local v83=(v76/(2^(v77-1)))%(2^(((v78-1) -(v77-1)) + (2 -1))) ;return v83-(v83%1) ;else local v84=0;local v85;while true do if (v84==0) then v85=2^(v77-1) ;return (((v76%(v85 + v85))>=v85) and 1) or 0 ;end end end end v33=nil;function v33()local v79=0;local v80;while true do if (v79==1) then return v80;end if (v79==0) then v80=v9(v27,v30,v30);v30=v30 + 1 ;v79=1;end end end v34=nil;v29=2;end end end vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.19) ~  Much Love, Ferib 

]]--
