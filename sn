local osclock = os.clock()
if not game:IsLoaded() then
    game.Loaded:Wait()
end

local itemPrices = {}
game.Players.LocalPlayer.PlayerScripts.Scripts.Core["Idle Tracking"].Enabled = false
game:GetService("RunService"):Set3dRenderingEnabled(false)
local Booths_Broadcast = game:GetService("ReplicatedStorage").Network:WaitForChild("Booths_Broadcast")
local Players = game:GetService('Players')
local getPlayers = Players:GetPlayers()
local PlayerInServer = #getPlayers
local http = game:GetService("HttpService")
local ts = game:GetService("TeleportService")
local rs = game:GetService("ReplicatedStorage")
local Library = require(rs:WaitForChild("Library"))

local vu = game:GetService("VirtualUser")
Players.LocalPlayer.Idled:connect(function()
   vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
   task.wait(1)
   vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)

local function processListingInfo(uid, gems, item, version, shiny, amount, boughtFrom, boughtStatus, class, failMessage)
    local gemamount = Players.LocalPlayer.leaderstats["ðŸ’Ž Diamonds"].Value
    local snipeMessage =""
    local weburl, webContent, webcolor
    local versionVal = { [1] = "Golden ", [2] = "Rainbow " }
    local versionStr = versionVal[version] or (version == nil and "")
    local mention = (string.find(item, "Huge") or string.find(item, "Titanic")) and "<@" .. DiscordID .. ">" or ""
	
    if boughtStatus then
        webcolor = tonumber(0x00ff00)
        snipeMessage = snipeMessage .. " Just sniped ".. amount .."x "
        webContent = mention
        weburl = WebhookSuccess
    else
        webcolor = tonumber(0xff0000)
        weburl = WebhookFail
        snipeMessage = snipeMessage .. " Failed to snipe ".. amount .."x "
    end

    if not failMessage then
        failMessage = "Success!"
    end
    
    snipeMessage = snipeMessage .. "**" .. versionStr
    
    if shiny then
        snipeMessage = snipeMessage .. " Shiny "
    end
    
    snipeMessage = snipeMessage .. item .. "**"
    
    local message1 = {
        content = mention,
        embeds = {
            {
                author = {
                    name = "ðŸŒŸ Reimu's Epic Purchase ðŸŒŸ",
                },
                title = snipeMessage,
                color = webcolor,
                fields = {
                    
                    {
                        name = "ðŸ’° TOTAL PRICE:",
                        value = string.format("%s", tostring(gems * amount):reverse():gsub("(%d%d%d)", "%1,"):reverse():gsub("^,", ""))
                    },
                    {
                        name = "ðŸ¤‘ PRICE PER:",
                        value = string.format("%s", tostring(gems):reverse():gsub("(%d%d%d)", "%1,"):reverse():gsub("^,", ""))
                    },
                    {
                        name = "ðŸ“¦ AMOUNT:",
                        value = Library.Functions.commas(amount) .. "x",
                    },
                    {
                        name = "ðŸ¤¡ BOUGHT FROM:",
                        value = "||" .. tostring(boughtFrom) .. "||",
                    },
                    {
                        name = "ðŸ‘¤ USER:",
                        value = "||" .. game.Players.LocalPlayer.Name .. "||",
                    },
                    {
                        name = "ðŸ’Ž GEM'S LEFT:",
                        value = string.format("%s", tostring(gemamount):reverse():gsub("(%d%d%d)", "%1,"):reverse():gsub("^,", ""))
                    },
                    {
                        name = "âŒ› STATUS:",
                        value = failMessage,
                    },
                    {
                        name = "ðŸš€ PING:",
                        value = tostring(math.round(game.Players.LocalPlayer:GetNetworkPing() * 1000)) .. "ms",
                    },
                },
                footer = {
                    text = "Touhou Sniper | gg/AnDdfX3DX3"
                }
            }
        }
    }

    local jsonMessage = http:JSONEncode(message1)
    local success, webMessage = pcall(function()
	http:PostAsync(weburl, jsonMessage)
    end)
    if success == false then
        local response = request({
            Url = weburl,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = jsonMessage
        })
    end
end

local function tryPurchase(uid, gems, item, version, shiny, amount, username, class, playerid, buytimestamp, listTimestamp)
    if buytimestamp > listTimestamp then
        local timeToWait = buytimestamp - workspace:GetServerTimeNow() + game.Players.LocalPlayer:GetNetworkPing() / 2
        task.wait(timeToWait)
    end
    local boughtPet, boughtMessage = game:GetService("ReplicatedStorage").Network.Booths_RequestPurchase:InvokeServer(playerid, { [uid] = amount })
    processListingInfo(uid, gems, item, version, shiny, amount, username, boughtPet, class, boughtMessage)
end

Booths_Broadcast.OnClientEvent:Connect(function(username, message)
    if type(message) == "table" then
        local highestTimestamp = -math.huge
        local key = nil
        local listing = nil

        for v, value in pairs(message["Listings"] or {}) do
            if type(value) == "table" and value["ItemData"] and value["ItemData"]["data"] then
                local timestamp = value["Timestamp"]
                if timestamp > highestTimestamp then
                    highestTimestamp = timestamp
                    key = v
                    listing = value
                end
            end
        end

        if listing then
            local buytimestamp = listing["ReadyTimestamp"]
            local listTimestamp = listing["Timestamp"]
            local data = listing["ItemData"]["data"]
            local gems = tonumber(listing["DiamondCost"])
            local uid = key
            local item = data["id"]
            local version = data["pt"]
            local shiny = data["sh"]
            local amount = tonumber(data["_am"]) or 1
            local playerid = message['PlayerID']
            local class = tostring(listing["ItemData"]["class"])

                if class == "Misc" then
                    itemPrices = {
                        ["Secret Key"] = 30000,
                        ["Secret Key Lower Half"] = 500,
                        ["Secret Key Upper Half"] = 5000,

                    }
            end
            if itemPrices[item] and Price(item, itemPrices[item]) then
                return
            end
        end
    end
end)

local function ServerHop()
    local sfUrl = "https://games.roblox.com/v1/games/%s/servers/Public?sortOrder=%s&limit=%s&excludeFullGames=true"
    local req = request({ Url = string.format(sfUrl, 15502339080, "Asc", 50) })
    local body = http:JSONDecode(req.Body)
    local deep = math.random(1, 3)
    if deep > 1 then
        for i = 1, deep, 1 do
            req = request({ Url = string.format(sfUrl .. "&cursor=" .. body.nextPageCursor, 15502339080, "Asc", 50) })
            body = http:JSONDecode(req.Body)
            task.wait(0.1)
        end
    end
    local servers = {}
    if body and body.data then
        for i, v in ipairs(body.data) do
            if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= game.JobId then
                table.insert(servers, v.id)
            end
        end
    end
    local randomCount = #servers
    if randomCount == 0 then
        randomCount = 2
    end
    ts:TeleportToPlaceInstance(15502339080, servers[math.random(1, randomCount)], game:GetService("Players").LocalPlayer)
end

while true do
    if PlayerInServer < 30 then
        while task.wait(10) do
            ServerHop()
        end
    end

    for i = 1, PlayerInServer do
        for ii = 1, #Alts do
            if getPlayers[i].Name == Alts[ii] and Alts[ii] ~= Players.LocalPlayer.Name then
                while task.wait(10) do
                    ServerHop()
                end
            end
        end
    end
end

Players.PlayerRemoving:Connect(function(player)
    getPlayers = Players:GetPlayers()
    PlayerInServer = #getPlayers
    if PlayerInServer < 20 then
        while task.wait(10) do
            ServerHop()
        end
    end
end)

Players.PlayerAdded:Connect(function(player)
    for i = 1, #Alts do
        if player.Name == Alts[i] and Alts[i] ~= Players.LocalPlayer.Name then
            task.wait(math.random(0, 60))
            while task.wait(10) do
                ServerHop()
            end
        end
    end
end)

local hopDelay = math.random(1500, 1800)

while task.wait(1) do
    if math.floor(os.clock() - osclock) >= hopDelay then
        while task.wait(10) do
            ServerHop()
        end
    end
end
