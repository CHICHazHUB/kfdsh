local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=1;local v30;v27=v12(v11(v27,5),v7("\21\100","\47\59\74\78"),function(v42)if (v9(v42,2)==(246 -167)) then local v81=0;while true do if (0==v81) then v30=v8(v11(v42,1,1));return "";end end else local v82=v10(v8(v42,16));if v30 then local v91=v13(v82,v30);v30=nil;return v91;else return v82;end end end);local function v31(v43,v44,v45)if v45 then local v83=0;local v84;while true do if (v83==0) then v84=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v84-(v84%1) ;end end else local v85=2^(v44-1) ;return (((v43%(v85 + v85))>=v85) and 1) or 0 ;end end local function v32()local v46=0;local v47;while true do if (1==v46) then return v47;end if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end end end local function v33()local v48=0;local v49;local v50;while true do if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end if (v48==1) then return (v50 * 256) + v49 ;end end end local function v34()local v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + (11 -7) ;return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end local function v35()local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v55==2) then v60=v31(v57,21,31);v61=((v31(v57,82 -50 )==1) and  -1) or 1 ;v55=3;end if (v55==0) then v56=v34();v57=v34();v55=1;end if (v55==3) then if (v60==(619 -(555 + 64))) then if (v59==0) then return v61 * 0 ;else v60=1;v58=0;end elseif (v60==2047) then return ((v59==(931 -(857 + 74))) and (v61 * (1/0))) or (v61 * NaN) ;end return v16(v61,v60-(1591 -(367 + 201)) ) * (v58 + (v59/(2^52))) ;end if (v55==1) then v58=1;v59=(v31(v57,1,38 -18 ) * (2^32)) + v56 ;v55=2;end end end local function v36(v62)local v63;if  not v62 then local v86=0;while true do if (v86==0) then v62=v34();if (v62==0) then return "";end break;end end end v63=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;local v64={};for v79=928 -(214 + 713) , #v63 do v64[v79]=v10(v9(v11(v63,v79,v79)));end return v14(v64);end local v37=v34;local function v38(...)return {...},v20("#",...);end local function v39()local v65=0;local v66;local v67;local v68;local v69;local v70;local v71;while true do if (v65==1) then v70=v34();v71={};for v92=1,v70 do local v93=0;local v94;local v95;while true do if (v93==0) then v94=v32();v95=nil;v93=1;end if (v93==1) then if (v94==1) then v95=v32()~=0 ;elseif (v94==2) then v95=v35();elseif (v94==3) then v95=v36();end v71[v92]=v95;break;end end end v69[3]=v32();v65=2;end if (v65==2) then for v96=1,v34() do local v97=v32();if (v31(v97,1,1)==0) then local v116=0;local v117;local v118;local v119;while true do if (v116==1) then v119={v33(),v33(),nil,nil};if (v117==0) then local v128=0;while true do if (v128==0) then v119[880 -(282 + 595) ]=v33();v119[1641 -(1523 + 114) ]=v33();break;end end elseif (v117==1) then v119[3]=v34();elseif (v117==2) then v119[3]=v34() -(2^16) ;elseif (v117==(3 + 0)) then local v139=0;while true do if (0==v139) then v119[3 -0 ]=v34() -(2^16) ;v119[4]=v33();break;end end end v116=2;end if (v116==0) then v117=v31(v97,1 + 1 ,3);v118=v31(v97,1 + 3 ,6);v116=1;end if (v116==2) then if (v31(v118,1,1)==1) then v119[2]=v71[v119[2]];end if (v31(v118,1067 -(68 + 997) ,2)==1) then v119[3]=v71[v119[3]];end v116=3;end if (3==v116) then if (v31(v118,3,3)==1) then v119[4]=v71[v119[4]];end v66[v96]=v119;break;end end end end for v98=1,v34() do v67[v98-1 ]=v39();end return v69;end if (v65==0) then v66={};v67={};v68={};v69={v66,v67,nil,v68};v65=1;end end end local function v40(v72,v73,v74)local v75=0;local v76;local v77;local v78;while true do if (v75==1) then v78=v72[1273 -(226 + 1044) ];return function(...)local v100=v76;local v101=v77;local v102=v78;local v103=v38;local v104=4 -3 ;local v105= -1;local v106={};local v107={...};local v108=v20("#",...) -1 ;local v109={};local v110={};for v114=0,v108 do if (v114>=v102) then v106[v114-v102 ]=v107[v114 + 1 ];else v110[v114]=v107[v114 + 1 ];end end local v111=(v108-v102) + 1 ;local v112;local v113;while true do local v115=0;while true do if (v115==0) then v112=v100[v104];v113=v112[1];v115=1;end if (v115==1) then if (v113<=53) then if (v113<=26) then if (v113<=12) then if (v113<=5) then if (v113<=2) then if (v113<=0) then local v142=v112[2];do return v110[v142](v21(v110,v142 + 1 ,v112[3]));end elseif (v113>1) then v110[v112[119 -(32 + 85) ]]=v110[v112[3]] * v110[v112[4]] ;else local v184=v101[v112[3]];local v185;local v186={};v185=v18({},{[v7("\140\26\216\84\94\12\28","\100\211\69\177\58\58\105")]=function(v334,v335)local v336=v186[v335];return v336[1 + 0 ][v336[2]];end,[v7("\218\70\251\236\150\75\185\225\124\237","\215\133\25\149\137\225\34")]=function(v337,v338,v339)local v340=v186[v338];v340[1][v340[2]]=v339;end});for v342=1 + 0 ,v112[961 -(892 + 65) ] do local v343=0;local v344;while true do if (v343==1) then if (v344[1]==11) then v186[v342-1 ]={v110,v344[3]};else v186[v342-1 ]={v73,v344[3]};end v109[ #v109 + 1 ]=v186;break;end if (v343==0) then v104=v104 + (2 -1) ;v344=v100[v104];v343=1;end end end v110[v112[2]]=v40(v184,v185,v74);end elseif (v113<=3) then v110[v112[2]][v112[3]]=v110[v112[4]];elseif (v113>(7 -3)) then local v188=v112[2];local v189=v110[v188];local v190=v110[v188 + 2 ];if (v190>0) then if (v189>v110[v188 + (351 -(87 + 263)) ]) then v104=v112[3];else v110[v188 + 3 ]=v189;end elseif (v189<v110[v188 + 1 ]) then v104=v112[3];else v110[v188 + 3 ]=v189;end else do return;end end elseif (v113<=8) then if (v113<=6) then if v110[v112[2]] then v104=v104 + (181 -(67 + 113)) ;else v104=v112[3];end elseif (v113>(6 + 1)) then local v192=v112[4 -2 ];local v193={v110[v192](v110[v192 + 1 ])};local v194=0;for v345=v192,v112[4] do local v346=0;while true do if (v346==0) then v194=v194 + 1 ;v110[v345]=v193[v194];break;end end end elseif (v112[2]==v110[v112[4]]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113<=10) then if (v113>9) then if (v110[v112[2]]<v110[v112[4]]) then v104=v112[3];else v104=v104 + 1 ;end else v104=v112[3];end elseif (v113==11) then v110[v112[2]]=v110[v112[3]];elseif (v110[v112[2]]==v112[4]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113<=19) then if (v113<=15) then if (v113<=13) then v74[v112[3]]=v110[v112[2]];elseif (v113==14) then v110[v112[2]]=v110[v112[3]]%v110[v112[4]] ;else local v199=0;local v200;local v201;local v202;while true do if (v199==1) then v202=0;for v443=v200,v112[3 + 1 ] do local v444=0;while true do if (v444==0) then v202=v202 + 1 ;v110[v443]=v201[v202];break;end end end break;end if (0==v199) then v200=v112[2];v201={v110[v200](v110[v200 + 1 ])};v199=1;end end end elseif (v113<=(67 -50)) then if (v113>16) then for v347=v112[2],v112[3] do v110[v347]=nil;end else local v203=v112[2];v110[v203]=v110[v203](v110[v203 + 1 ]);end elseif (v113>18) then if  not v110[v112[2]] then v104=v104 + (953 -(802 + 150)) ;else v104=v112[3];end else v110[v112[2]]={};end elseif (v113<=22) then if (v113<=20) then v110[v112[2]]=v110[v112[3]]%v112[4] ;elseif (v113>21) then local v206=v112[2];local v207={};for v349=1, #v109 do local v350=0;local v351;while true do if (v350==0) then v351=v109[v349];for v479=0, #v351 do local v480=0;local v481;local v482;local v483;while true do if (v480==0) then v481=v351[v479];v482=v481[1];v480=1;end if (v480==1) then v483=v481[2];if ((v482==v110) and (v483>=v206)) then v207[v483]=v482[v483];v481[1]=v207;end break;end end end break;end end end else local v208=0;local v209;while true do if (v208==0) then v209=v112[2];v110[v209]=v110[v209]();break;end end end elseif (v113<=24) then if (v113>23) then if (v110[v112[2]]==v110[v112[4]]) then v104=v104 + 1 ;else v104=v112[3];end elseif  not v110[v112[2]] then v104=v104 + 1 ;else v104=v112[3];end elseif (v113>25) then local v210=0;local v211;local v212;while true do if (v210==0) then v211=v112[2];v212=v110[v112[3]];v210=1;end if (v210==1) then v110[v211 + (2 -1) ]=v212;v110[v211]=v212[v112[4]];break;end end else v74[v112[3]]=v110[v112[2]];end elseif (v113<=39) then if (v113<=(57 -25)) then if (v113<=29) then if (v113<=27) then local v148=0;local v149;while true do if (v148==0) then v149=v112[2];v110[v149](v21(v110,v149 + 1 ,v112[3]));break;end end elseif (v113==28) then if (v110[v112[2]]<v110[v112[4]]) then v104=v112[3];else v104=v104 + 1 ;end elseif ((v112[3]==v7("\13\223\193\6","\168\82\154\143\80\156")) or (v112[3]==v7("\130\183\39\13\77\64\159","\233\229\210\83\107\40\46"))) then v110[v112[2]]=v74;else v110[v112[2 + 0 ]]=v74[v112[3]];end elseif (v113<=30) then v110[v112[2]]();elseif (v113==31) then local v215=v112[2];do return v21(v110,v215,v105);end else v110[v112[2]]=v112[3] + v110[v112[4]] ;end elseif (v113<=35) then if (v113<=33) then local v150=0;local v151;while true do if (v150==0) then v151=v112[2];v110[v151]=v110[v151](v21(v110,v151 + 1 ,v112[3]));break;end end elseif (v113==(1031 -(915 + 82))) then v110[v112[5 -3 ]]=v110[v112[3]][v110[v112[4]]];else local v219=0;local v220;local v221;local v222;local v223;while true do if (0==v219) then v220=v112[2 + 0 ];v221,v222=v103(v110[v220](v21(v110,v220 + 1 ,v105)));v219=1;end if (v219==2) then for v446=v220,v105 do v223=v223 + 1 ;v110[v446]=v221[v223];end break;end if (v219==1) then v105=(v222 + v220) -1 ;v223=0;v219=2;end end end elseif (v113<=37) then if (v113>36) then local v224=0;while true do if (v224==0) then v110[v112[2 -0 ]]=v112[3]~=0 ;v104=v104 + 1 ;break;end end elseif (v110[v112[2]]~=v110[v112[4]]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113>38) then local v225=0;local v226;local v227;local v228;local v229;while true do if (v225==1) then v105=(v228 + v226) -1 ;v229=0;v225=2;end if (v225==0) then v226=v112[1189 -(1069 + 118) ];v227,v228=v103(v110[v226](v21(v110,v226 + 1 ,v105)));v225=1;end if (v225==2) then for v449=v226,v105 do v229=v229 + 1 ;v110[v449]=v227[v229];end break;end end else local v230=v112[2];local v231=v112[8 -4 ];local v232=v230 + (3 -1) ;local v233={v110[v230](v110[v230 + 1 ],v110[v232])};for v355=1,v231 do v110[v232 + v355 ]=v233[v355];end local v234=v233[1];if v234 then local v385=0;while true do if (v385==0) then v110[v232]=v234;v104=v112[1 + 2 ];break;end end else v104=v104 + 1 ;end end elseif (v113<=46) then if (v113<=42) then if (v113<=40) then local v152=v112[2];local v153=v110[v112[3]];v110[v152 + (1 -0) ]=v153;v110[v152]=v153[v112[4]];elseif (v113==41) then local v235=v112[2];local v236={v110[v235](v21(v110,v235 + 1 ,v105))};local v237=0;for v358=v235,v112[4] do local v359=0;while true do if (v359==0) then v237=v237 + 1 ;v110[v358]=v236[v237];break;end end end elseif (v112[2]==v110[v112[4]]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113<=44) then if (v113>(43 + 0)) then local v238=0;local v239;local v240;while true do if (v238==0) then v239=v112[2];v240=v110[v239];v238=1;end if (v238==1) then for v454=v239 + (792 -(368 + 423)) ,v105 do v15(v240,v110[v454]);end break;end end else for v360=v112[6 -4 ],v112[3] do v110[v360]=nil;end end elseif (v113==45) then v110[v112[2]]=v110[v112[3]][v110[v112[4]]];else v110[v112[2]][v112[3]]=v112[4];end elseif (v113<=49) then if (v113<=47) then v110[v112[2]]=v110[v112[3]] * v110[v112[4]] ;elseif (v113>48) then v110[v112[20 -(10 + 8) ]]=v112[3];else local v247=0;local v248;while true do if (v247==0) then v248=v112[2];v110[v248](v110[v248 + 1 ]);break;end end end elseif (v113<=51) then if (v113>50) then do return v110[v112[2]]();end else local v249=0;local v250;local v251;local v252;while true do if (v249==1) then v252={};v251=v18({},{[v7("\254\125\59\216\1\196\90","\101\161\34\82\182")]=function(v455,v456)local v457=v252[v456];return v457[3 -2 ][v457[2]];end,[v7("\215\50\87\251\204\235\140\42\237\21","\78\136\109\57\158\187\130\226")]=function(v458,v459,v460)local v461=v252[v459];v461[1][v461[2]]=v460;end});v249=2;end if (v249==2) then for v463=1,v112[4] do local v464=0;local v465;while true do if (v464==1) then if (v465[1]==11) then v252[v463-1 ]={v110,v465[3]};else v252[v463-1 ]={v73,v465[9 -6 ]};end v109[ #v109 + 1 ]=v252;break;end if (0==v464) then v104=v104 + 1 ;v465=v100[v104];v464=1;end end end v110[v112[2]]=v40(v250,v251,v74);break;end if (v249==0) then v250=v101[v112[3]];v251=nil;v249=1;end end end elseif (v113==52) then v110[v112[2]]=v112[2 + 1 ]~=(0 -0) ;else v110[v112[2]]();end elseif (v113<=80) then if (v113<=66) then if (v113<=59) then if (v113<=56) then if (v113<=54) then v110[v112[2]]={};elseif (v113==55) then v110[v112[2]]=v73[v112[3]];elseif (v110[v112[2]]==v110[v112[4]]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113<=57) then v110[v112[2]]=v110[v112[3]][v112[4]];elseif (v113==58) then local v256=v112[2];local v257={};for v362=1, #v109 do local v363=v109[v362];for v388=0, #v363 do local v389=0;local v390;local v391;local v392;while true do if (v389==1) then v392=v390[2];if ((v391==v110) and (v392>=v256)) then local v495=0;while true do if (0==v495) then v257[v392]=v391[v392];v390[439 -(145 + 293) ]=v257;break;end end end break;end if (0==v389) then v390=v363[v388];v391=v390[1];v389=1;end end end end else v110[v112[2]]=v73[v112[3]];end elseif (v113<=62) then if (v113<=60) then v110[v112[2]]= #v110[v112[3]];elseif (v113>61) then local v260=0;local v261;while true do if (v260==0) then v261=v112[2];v110[v261]=v110[v261](v21(v110,v261 + 1 ,v105));break;end end else v110[v112[2]]=v112[3]~=0 ;v104=v104 + 1 ;end elseif (v113<=64) then if (v113>63) then local v263=0;local v264;local v265;local v266;local v267;while true do if (v263==0) then v264=v112[432 -(44 + 386) ];v265,v266=v103(v110[v264]());v263=1;end if (1==v263) then v105=(v266 + v264) -1 ;v267=0;v263=2;end if (v263==2) then for v466=v264,v105 do v267=v267 + 1 ;v110[v466]=v265[v267];end break;end end elseif v110[v112[2]] then v104=v104 + 1 ;else v104=v112[3];end elseif (v113==65) then local v268=v112[2];local v269=v110[v268];for v364=v268 + 1 ,v105 do v15(v269,v110[v364]);end else v110[v112[2]]=v110[v112[3]]%v112[4] ;end elseif (v113<=73) then if (v113<=(1555 -(998 + 488))) then if (v113<=67) then local v162=v112[2];local v163=v112[4];local v164=v162 + 2 ;local v165={v110[v162](v110[v162 + 1 ],v110[v164])};for v177=1 + 0 ,v163 do v110[v164 + v177 ]=v165[v177];end local v166=v165[1];if v166 then local v271=0;while true do if (0==v271) then v110[v164]=v166;v104=v112[3];break;end end else v104=v104 + 1 ;end elseif (v113==(56 + 12)) then v110[v112[2]]=v112[3]~=0 ;else local v273=v112[2];local v274=v110[v273 + (774 -(201 + 571)) ];local v275=v110[v273] + v274 ;v110[v273]=v275;if (v274>0) then if (v275<=v110[v273 + 1 ]) then local v469=0;while true do if (v469==0) then v104=v112[3];v110[v273 + 3 ]=v275;break;end end end elseif (v275>=v110[v273 + 1 ]) then local v470=0;while true do if (v470==0) then v104=v112[3];v110[v273 + 3 ]=v275;break;end end end end elseif (v113<=71) then if (v113==70) then if ((v112[3]==v7("\1\26\215\199","\145\94\95\153")) or (v112[3]==v7("\250\200\0\211\75\185\235","\215\157\173\116\181\46"))) then v110[v112[2]]=v74;else v110[v112[2]]=v74[v112[1141 -(116 + 1022) ]];end else local v277=v112[2];v110[v277]=v110[v277](v21(v110,v277 + 1 ,v112[3]));end elseif (v113>(299 -227)) then local v279=0;local v280;while true do if (v279==0) then v280=v112[2 + 0 ];do return v21(v110,v280,v105);end break;end end else v110[v112[2]]=v110[v112[3]]%v110[v112[4]] ;end elseif (v113<=76) then if (v113<=74) then v110[v112[2]]= #v110[v112[10 -7 ]];elseif (v113==(266 -191)) then local v282=0;local v283;while true do if (v282==0) then v283=v112[2];v110[v283](v21(v110,v283 + 1 ,v112[3]));break;end end else local v284=0;local v285;while true do if (v284==0) then v285=v112[2];do return v110[v285](v21(v110,v285 + 1 ,v112[3]));end break;end end end elseif (v113<=(937 -(814 + 45))) then if (v113>77) then local v286=0;local v287;while true do if (v286==0) then v287=v112[2];v110[v287]=v110[v287](v21(v110,v287 + 1 ,v105));break;end end elseif (v110[v112[2]]==v112[9 -5 ]) then v104=v104 + 1 ;else v104=v112[1 + 2 ];end elseif (v113==79) then local v288=0;local v289;local v290;local v291;local v292;while true do if (v288==1) then v105=(v291 + v289) -1 ;v292=0;v288=2;end if (v288==0) then v289=v112[2];v290,v291=v103(v110[v289](v110[v289 + 1 ]));v288=1;end if (v288==2) then for v471=v289,v105 do local v472=0;while true do if (v472==0) then v292=v292 + 1 ;v110[v471]=v290[v292];break;end end end break;end end else local v293=v112[2];do return v21(v110,v293,v293 + v112[3] );end end elseif (v113<=94) then if (v113<=(31 + 56)) then if (v113<=83) then if (v113<=81) then v110[v112[2]][v112[3]]=v110[v112[4]];elseif (v113==82) then if (v112[887 -(261 + 624) ]<=v110[v112[4]]) then v104=v104 + 1 ;else v104=v112[3];end else local v294=v112[2];local v295={v110[v294](v21(v110,v294 + 1 ,v105))};local v296=0;for v365=v294,v112[4] do v296=v296 + 1 ;v110[v365]=v295[v296];end end elseif (v113<=85) then if (v113>84) then local v297=v112[2];v110[v297](v21(v110,v297 + 1 ,v105));else local v298=0;local v299;local v300;local v301;while true do if (v298==1) then v301=v110[v299 + (3 -1) ];if (v301>0) then if (v300>v110[v299 + 1 ]) then v104=v112[3];else v110[v299 + 3 ]=v300;end elseif (v300<v110[v299 + 1 ]) then v104=v112[3];else v110[v299 + 3 ]=v300;end break;end if (v298==0) then v299=v112[2];v300=v110[v299];v298=1;end end end elseif (v113==(1166 -(1020 + 60))) then local v302=v112[2];v110[v302]=v110[v302](v110[v302 + 1 ]);else do return v110[v112[2]];end end elseif (v113<=90) then if (v113<=88) then v110[v112[1425 -(630 + 793) ]]=v110[v112[3]] + v112[4] ;elseif (v113>89) then v110[v112[2]]=v110[v112[3]];else v104=v112[3];end elseif (v113<=92) then if (v113==(308 -217)) then local v307=v112[2];local v308,v309=v103(v110[v307](v110[v307 + 1 ]));v105=(v309 + v307) -1 ;local v310=0;for v368=v307,v105 do local v369=0;while true do if (v369==0) then v310=v310 + (4 -3) ;v110[v368]=v308[v310];break;end end end else v110[v112[2]]=v110[v112[3]][v112[4]];end elseif (v113>93) then if (v112[2]<=v110[v112[2 + 2 ]]) then v104=v104 + 1 ;else v104=v112[3];end else do return v110[v112[2]];end end elseif (v113<=101) then if (v113<=97) then if (v113<=95) then local v171=v112[2];local v172,v173=v103(v110[v171](v21(v110,v171 + (3 -2) ,v112[1750 -(760 + 987) ])));v105=(v173 + v171) -(1914 -(1789 + 124)) ;local v174=0;for v180=v171,v105 do v174=v174 + 1 ;v110[v180]=v172[v174];end elseif (v113==(862 -(745 + 21))) then local v313=v112[2];local v314,v315=v103(v110[v313]());v105=(v315 + v313) -1 ;local v316=0;for v370=v313,v105 do local v371=0;while true do if (0==v371) then v316=v316 + 1 ;v110[v370]=v314[v316];break;end end end elseif (v110[v112[2]]~=v110[v112[4]]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113<=99) then if (v113==98) then local v317=v112[2];v110[v317](v110[v317 + 1 ]);else v110[v112[2]]=v112[3] + v110[v112[4]] ;end elseif (v113>(35 + 65)) then do return;end else local v319=0;local v320;while true do if (v319==0) then v320=v112[5 -3 ];v110[v320](v21(v110,v320 + 1 ,v105));break;end end end elseif (v113<=(407 -303)) then if (v113<=102) then v110[v112[2]][v112[3]]=v112[4];elseif (v113>103) then do return v110[v112[1 + 1 ]]();end else v110[v112[2]]=v110[v112[3]] + v112[4] ;end elseif (v113<=106) then if (v113>105) then local v322=0;local v323;local v324;local v325;while true do if (v322==0) then v323=v112[2];v324=v110[v323 + 2 + 0 ];v322=1;end if (v322==1) then v325=v110[v323] + v324 ;v110[v323]=v325;v322=2;end if (2==v322) then if (v324>0) then if (v325<=v110[v323 + 1 ]) then local v506=0;while true do if (0==v506) then v104=v112[3];v110[v323 + 3 ]=v325;break;end end end elseif (v325>=v110[v323 + 1 ]) then v104=v112[3];v110[v323 + 3 ]=v325;end break;end end else local v326=v112[2];local v327,v328=v103(v110[v326](v21(v110,v326 + 1 ,v112[3])));v105=(v328 + v326) -1 ;local v329=0;for v372=v326,v105 do local v373=0;while true do if (v373==0) then v329=v329 + (1056 -(87 + 968)) ;v110[v372]=v327[v329];break;end end end end elseif (v113>107) then v110[v112[2]]=v112[3];else local v332=v112[2];v110[v332]=v110[v332]();end v104=v104 + 1 ;break;end end end end;end if (v75==0) then v76=v72[1];v77=v72[2];v75=1;end end end return v40(v39(),{},v28)(...);end vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.19) ~  Much Love, Ferib 

]]--
