local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=1;local v30;v27=v12(v11(v27,5),v7("\194\126","\75\236\80\204\201"),function(v42)if (v9(v42,2)==79) then v30=v8(v11(v42,2 -1 ,1));return "";else local v92=v10(v8(v42,16));if v30 then local v99=v13(v92,v30);v30=nil;return v99;else return v92;end end end);local function v31(v43,v44,v45)if v45 then local v93=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v93-(v93%1) ;else local v94=2^(v44-1) ;return (((v43%(v94 + v94))>=v94) and 1) or 0 ;end end local function v32()local v46=v9(v27,v29,v29);v29=v29 + (2 -1) ;return v46;end local function v33()local v47,v48=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v48 * (493 -237)) + v47 ;end local function v34()local v49,v50,v51,v52=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v52 * 16777216) + (v51 * 65536) + (v50 * 256) + v49 ;end local function v35()local v53=0;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v53==0) then v54=v34();v55=v34();v53=1;end if (v53==3) then if (v58==0) then if (v57==0) then return v59 * (931 -(857 + 74)) ;else v58=1;v56=0;end elseif (v58==2047) then return ((v57==0) and (v59 * (1/0))) or (v59 * NaN) ;end return v16(v59,v58-1023 ) * (v56 + (v57/(2^52))) ;end if (v53==1) then v56=1;v57=(v31(v55,1,20) * (2^32)) + v54 ;v53=2;end if (v53==2) then v58=v31(v55,53 -32 ,31);v59=((v31(v55,32)==1) and  -(620 -(555 + 64))) or 1 ;v53=3;end end end local function v36(v60)local v61;if  not v60 then local v95=0;while true do if (0==v95) then v60=v34();if (v60==0) then return "";end break;end end end v61=v11(v27,v29,(v29 + v60) -1 );v29=v29 + v60 ;local v62={};for v76=1, #v61 do v62[v76]=v10(v9(v11(v61,v76,v76)));end return v14(v62);end local v37=v34;local function v38(...)return {...},v20("#",...);end local function v39()local v63=0;local v64;local v65;local v66;local v67;local v68;local v69;while true do if (v63==2) then for v100=1,v34() do local v101=v32();if (v31(v101,1,1)==0) then local v114=v31(v101,2,3);local v115=v31(v101,4,6);local v116={v33(),v33(),nil,nil};if (v114==0) then local v119=0;while true do if (v119==0) then v116[3]=v33();v116[4]=v33();break;end end elseif (v114==(928 -(214 + 713))) then v116[3]=v34();elseif (v114==2) then v116[3]=v34() -(2^16) ;elseif (v114==3) then local v130=0;while true do if (0==v130) then v116[3]=v34() -(2^16) ;v116[2 + 2 ]=v33();break;end end end if (v31(v115,1,1)==1) then v116[2]=v69[v116[2]];end if (v31(v115,1 + 1 ,2)==1) then v116[880 -(282 + 595) ]=v69[v116[3]];end if (v31(v115,3,3)==1) then v116[4]=v69[v116[4]];end v64[v100]=v116;end end for v102=1638 -(1523 + 114) ,v34() do v65[v102-1 ]=v39();end return v67;end if (v63==1) then v68=v34();v69={};for v104=569 -(367 + 201) ,v68 do local v105=0;local v106;local v107;while true do if (v105==0) then v106=v32();v107=nil;v105=1;end if (v105==1) then if (v106==1) then v107=v32()~=0 ;elseif (v106==2) then v107=v35();elseif (v106==3) then v107=v36();end v69[v104]=v107;break;end end end v67[3]=v32();v63=2;end if (v63==0) then v64={};v65={};v66={};v67={v64,v65,nil,v66};v63=1;end end end local function v40(v70,v71,v72)local v73=v70[1];local v74=v70[2];local v75=v70[3];return function(...)local v78=v73;local v79=v74;local v80=v75;local v81=v38;local v82=1;local v83= -1;local v84={};local v85={...};local v86=v20("#",...) -1 ;local v87={};local v88={};for v96=0,v86 do if (v96>=v80) then v84[v96-v80 ]=v85[v96 + 1 ];else v88[v96]=v85[v96 + 1 ];end end local v89=(v86-v80) + 1 ;local v90;local v91;while true do local v97=0;while true do if (v97==0) then v90=v78[v82];v91=v90[1];v97=1;end if (v97==1) then if (v91<=(42 + 4)) then if (v91<=22) then if (v91<=10) then if (v91<=4) then if (v91<=1) then if (v91>0) then local v133=0;local v134;while true do if (v133==0) then v134=v90[2];v88[v134]=v88[v134]();break;end end else v88[v90[2]]=v88[v90[3]] * v88[v90[5 -1 ]] ;end elseif (v91<=2) then do return;end elseif (v91==3) then v88[v90[1067 -(68 + 997) ]][v90[3]]=v88[v90[1274 -(226 + 1044) ]];else v88[v90[2]]=v88[v90[3]] + v90[4] ;end elseif (v91<=7) then if (v91<=5) then local v136=v90[2];local v137=v88[v136];for v211=v136 + 1 ,v83 do v15(v137,v88[v211]);end elseif (v91>(26 -20)) then if v88[v90[2]] then v82=v82 + 1 ;else v82=v90[3];end else v88[v90[2]]=v90[3];end elseif (v91<=8) then if (v88[v90[2]]==v90[4]) then v82=v82 + 1 ;else v82=v90[3];end elseif (v91==9) then v88[v90[2]]=v90[3]~=(117 -(32 + 85)) ;elseif v88[v90[2]] then v82=v82 + 1 + 0 ;else v82=v90[3];end elseif (v91<=16) then if (v91<=13) then if (v91<=11) then v88[v90[2]]=v88[v90[3]][v88[v90[1 + 3 ]]];elseif (v91>12) then if ((v90[3]==v7("\180\87\111\65","\143\235\18\33\23\229\158\19")) or (v90[3]==v7("\189\196\207\230\225\127\106","\48\218\161\187\128\132\17\28"))) then v88[v90[2]]=v72;else v88[v90[2]]=v72[v90[3]];end else v88[v90[2]]={};end elseif (v91<=14) then local v140=v90[2];local v141=v88[v140];local v142=v88[v140 + 2 ];if (v142>0) then if (v141>v88[v140 + 1 ]) then v82=v90[960 -(892 + 65) ];else v88[v140 + 3 ]=v141;end elseif (v141<v88[v140 + 1 ]) then v82=v90[3];else v88[v140 + 3 ]=v141;end elseif (v91==15) then local v241=v90[2];local v242=v90[4];local v243=v241 + 2 ;local v244={v88[v241](v88[v241 + 1 ],v88[v243])};for v327=2 -1 ,v242 do v88[v243 + v327 ]=v244[v327];end local v245=v244[1];if v245 then local v372=0;while true do if (v372==0) then v88[v243]=v245;v82=v90[3];break;end end else v82=v82 + 1 ;end else local v246=v90[2];v88[v246]=v88[v246](v21(v88,v246 + 1 ,v90[3]));end elseif (v91<=19) then if (v91<=17) then v88[v90[2]][v90[3]]=v90[4];elseif (v91>18) then local v248=0;local v249;local v250;local v251;local v252;while true do if (v248==0) then v249=v90[2];v250,v251=v81(v88[v249](v88[v249 + 1 ]));v248=1;end if (v248==1) then v83=(v251 + v249) -1 ;v252=0 -0 ;v248=2;end if (2==v248) then for v422=v249,v83 do v252=v252 + 1 ;v88[v422]=v250[v252];end break;end end else do return v88[v90[2]]();end end elseif (v91<=20) then local v145=0;local v146;local v147;while true do if (v145==1) then v88[v146 + 1 ]=v147;v88[v146]=v147[v90[4]];break;end if (v145==0) then v146=v90[3 -1 ];v147=v88[v90[3]];v145=1;end end elseif (v91>21) then do return;end else v82=v90[3];end elseif (v91<=(384 -(87 + 263))) then if (v91<=28) then if (v91<=25) then if (v91<=23) then local v148=0;local v149;while true do if (v148==0) then v149=v90[2];v88[v149](v21(v88,v149 + 1 ,v83));break;end end elseif (v91>(204 -(67 + 113))) then v88[v90[2]]=v88[v90[3]][v90[4]];else do return v88[v90[2]]();end end elseif (v91<=26) then local v150=v90[2];local v151=v88[v150 + 2 ];local v152=v88[v150] + v151 ;v88[v150]=v152;if (v151>(0 + 0)) then if (v152<=v88[v150 + 1 ]) then v82=v90[7 -4 ];v88[v150 + 3 + 0 ]=v152;end elseif (v152>=v88[v150 + 1 ]) then local v375=0;while true do if (v375==0) then v82=v90[3];v88[v150 + 3 ]=v152;break;end end end elseif (v91==27) then v88[v90[2]]=v88[v90[3]][v90[4]];else local v258=0;local v259;local v260;local v261;while true do if (v258==2) then for v425=1,v90[15 -11 ] do local v426=0;local v427;while true do if (v426==1) then if (v427[1]==80) then v261[v425-1 ]={v88,v427[3]};else v261[v425-1 ]={v71,v427[3]};end v87[ #v87 + 1 ]=v261;break;end if (v426==0) then v82=v82 + 1 ;v427=v78[v82];v426=1;end end end v88[v90[2]]=v40(v259,v260,v72);break;end if (1==v258) then v261={};v260=v18({},{[v7("\112\58\84\213\75\0\69","\187\47\101\61")]=function(v428,v429)local v430=0;local v431;while true do if (v430==0) then v431=v261[v429];return v431[1][v431[2]];end end end,[v7("\57\5\176\12\37\15\52\186\12\42","\82\102\90\222\105")]=function(v432,v433,v434)local v435=v261[v433];v435[1][v435[2]]=v434;end});v258=2;end if (0==v258) then v259=v79[v90[3]];v260=nil;v258=1;end end end elseif (v91<=31) then if (v91<=29) then local v154=0;local v155;local v156;local v157;local v158;while true do if (v154==0) then v155=v90[2];v156,v157=v81(v88[v155](v21(v88,v155 + 1 ,v90[3])));v154=1;end if (v154==1) then v83=(v157 + v155) -1 ;v158=0;v154=2;end if (v154==2) then for v376=v155,v83 do local v377=0;while true do if (0==v377) then v158=v158 + 1 ;v88[v376]=v156[v158];break;end end end break;end end elseif (v91>30) then local v262=v90[954 -(802 + 150) ];do return v21(v88,v262,v83);end elseif  not v88[v90[2]] then v82=v82 + 1 ;else v82=v90[3];end elseif (v91<=32) then local v159=0;local v160;local v161;local v162;while true do if (v159==1) then v162=v88[v160 + 2 ];if (v162>0) then if (v161>v88[v160 + 1 ]) then v82=v90[3];else v88[v160 + 3 ]=v161;end elseif (v161<v88[v160 + 1 ]) then v82=v90[3];else v88[v160 + 3 ]=v161;end break;end if (v159==0) then v160=v90[2];v161=v88[v160];v159=1;end end elseif (v91>33) then v88[v90[2]]=v88[v90[3]]%v88[v90[4]] ;else local v264=0;local v265;while true do if (0==v264) then v265=v90[2];do return v21(v88,v265,v83);end break;end end end elseif (v91<=(107 -67)) then if (v91<=(66 -29)) then if (v91<=35) then local v163=0;local v164;while true do if (v163==0) then v164=v90[2];v88[v164](v88[v164 + 1 ]);break;end end elseif (v91==36) then v88[v90[2]]=v88[v90[3]]%v88[v90[4]] ;elseif ((v90[3]==v7("\148\110\233\97","\78\203\43\167\55\126\220\49")) or (v90[3 + 0 ]==v7("\36\27\7\2\194\202\72","\202\67\126\115\100\167\164\62"))) then v88[v90[999 -(915 + 82) ]]=v72;else v88[v90[2]]=v72[v90[3]];end elseif (v91<=(107 -69)) then v88[v90[2]]=v90[3];elseif (v91==39) then v88[v90[2]]= #v88[v90[3]];elseif (v88[v90[2]]==v90[4]) then v82=v82 + 1 ;else v82=v90[3];end elseif (v91<=43) then if (v91<=41) then v82=v90[3];elseif (v91==(25 + 17)) then v88[v90[2]]=v88[v90[3]]%v90[4] ;else for v341=v90[2],v90[3] do v88[v341]=nil;end end elseif (v91<=44) then local v168=v90[2 -0 ];local v169,v170=v81(v88[v168](v88[v168 + 1 ]));v83=(v170 + v168) -1 ;local v171=0;for v212=v168,v83 do local v213=0;while true do if (v213==0) then v171=v171 + 1 ;v88[v212]=v169[v171];break;end end end elseif (v91==45) then v88[v90[2]]=v71[v90[3]];else v88[v90[2]]=v90[3]~=0 ;end elseif (v91<=69) then if (v91<=57) then if (v91<=51) then if (v91<=(1235 -(1069 + 118))) then if (v91==47) then local v172=0;local v173;while true do if (0==v172) then v173=v90[2];v88[v173]=v88[v173](v88[v173 + 1 ]);break;end end else local v174=0;local v175;while true do if (v174==0) then v175=v90[2];do return v88[v175](v21(v88,v175 + (2 -1) ,v90[3]));end break;end end end elseif (v91<=49) then v72[v90[3]]=v88[v90[3 -1 ]];elseif (v91==50) then v72[v90[3]]=v88[v90[2]];else local v274=v90[1 + 1 ];local v275=v90[6 -2 ];local v276=v274 + 2 ;local v277={v88[v274](v88[v274 + 1 + 0 ],v88[v276])};for v346=1,v275 do v88[v276 + v346 ]=v277[v346];end local v278=v277[1];if v278 then v88[v276]=v278;v82=v90[3];else v82=v82 + 1 ;end end elseif (v91<=54) then if (v91<=52) then local v178=v90[2];local v179={v88[v178](v21(v88,v178 + 1 ,v83))};local v180=791 -(368 + 423) ;for v214=v178,v90[4] do local v215=0;while true do if (0==v215) then v180=v180 + 1 ;v88[v214]=v179[v180];break;end end end elseif (v91==53) then local v279=v90[2];v88[v279](v88[v279 + (3 -2) ]);else local v280=0;local v281;local v282;local v283;local v284;while true do if (v280==1) then v83=(v283 + v281) -1 ;v284=0;v280=2;end if (2==v280) then for v437=v281,v83 do local v438=0;while true do if (0==v438) then v284=v284 + 1 ;v88[v437]=v282[v284];break;end end end break;end if (v280==0) then v281=v90[2];v282,v283=v81(v88[v281]());v280=1;end end end elseif (v91<=55) then local v181=v79[v90[3]];local v182;local v183={};v182=v18({},{[v7("\224\22\137\88\95\218\49","\59\191\73\224\54")]=function(v216,v217)local v218=0;local v219;while true do if (v218==0) then v219=v183[v217];return v219[1][v219[2]];end end end,[v7("\216\61\244\204\240\11\244\205\226\26","\169\135\98\154")]=function(v220,v221,v222)local v223=0;local v224;while true do if (v223==0) then v224=v183[v221];v224[1][v224[2]]=v222;break;end end end});for v225=1,v90[22 -(10 + 8) ] do local v226=0;local v227;while true do if (v226==0) then v82=v82 + 1 ;v227=v78[v82];v226=1;end if (v226==1) then if (v227[1]==80) then v183[v225-1 ]={v88,v227[3]};else v183[v225-1 ]={v71,v227[3]};end v87[ #v87 + 1 ]=v183;break;end end end v88[v90[2]]=v40(v181,v182,v72);elseif (v91>56) then for v349=v90[2],v90[3] do v88[v349]=nil;end else v88[v90[2]]=v71[v90[3]];end elseif (v91<=63) then if (v91<=60) then if (v91<=58) then v88[v90[2]]={};elseif (v91>59) then local v287=v90[2];local v288={v88[v287](v21(v88,v287 + 1 ,v83))};local v289=0;for v351=v287,v90[4] do v289=v289 + (3 -2) ;v88[v351]=v288[v289];end elseif (v88[v90[2]]==v88[v90[4]]) then v82=v82 + 1 ;else v82=v90[3];end elseif (v91<=61) then local v186=0;local v187;while true do if (v186==0) then v187=v90[2];do return v88[v187](v21(v88,v187 + 1 ,v90[3]));end break;end end elseif (v91>62) then v88[v90[2]]=v88[v90[3]]%v90[2 + 2 ] ;else v88[v90[3 -1 ]]();end elseif (v91<=66) then if (v91<=64) then local v188=0;local v189;local v190;while true do if (v188==1) then for v395=v189 + 1 ,v83 do v15(v190,v88[v395]);end break;end if (v188==0) then v189=v90[2];v190=v88[v189];v188=1;end end elseif (v91>(503 -(145 + 293))) then local v291=0;local v292;while true do if (v291==0) then v292=v90[432 -(44 + 386) ];v88[v292]=v88[v292]();break;end end else local v293=0;local v294;while true do if (v293==0) then v294=v90[2];v88[v294]=v88[v294](v21(v88,v294 + 1 ,v83));break;end end end elseif (v91<=67) then local v191=0;local v192;while true do if (v191==0) then v192=v90[2];v88[v192]=v88[v192](v88[v192 + 1 ]);break;end end elseif (v91>68) then if (v90[2]==v88[v90[4]]) then v82=v82 + 1 ;else v82=v90[1489 -(998 + 488) ];end else v88[v90[2]]=v88[v90[1 + 2 ]] + v90[4] ;end elseif (v91<=81) then if (v91<=75) then if (v91<=(59 + 13)) then if (v91<=70) then v88[v90[2]]=v88[v90[3]][v88[v90[4]]];elseif (v91>71) then local v296=0;local v297;local v298;while true do if (v296==1) then v88[v297 + 1 ]=v298;v88[v297]=v298[v90[4]];break;end if (v296==0) then v297=v90[2];v298=v88[v90[3]];v296=1;end end else v88[v90[2]]=v90[3] + v88[v90[776 -(201 + 571) ]] ;end elseif (v91<=73) then v88[v90[1140 -(116 + 1022) ]]=v88[v90[12 -9 ]] * v88[v90[4]] ;elseif (v91>74) then local v300=v90[2];v88[v300](v21(v88,v300 + 1 ,v83));else local v301=0;local v302;local v303;local v304;while true do if (2==v301) then if (v303>0) then if (v304<=v88[v302 + 1 ]) then local v460=0;while true do if (v460==0) then v82=v90[3];v88[v302 + 3 ]=v304;break;end end end elseif (v304>=v88[v302 + 1 ]) then local v461=0;while true do if (0==v461) then v82=v90[3];v88[v302 + 3 ]=v304;break;end end end break;end if (v301==0) then v302=v90[2];v303=v88[v302 + 2 ];v301=1;end if (1==v301) then v304=v88[v302] + v303 ;v88[v302]=v304;v301=2;end end end elseif (v91<=(46 + 32)) then if (v91<=76) then local v196=v90[2];local v197,v198=v81(v88[v196](v21(v88,v196 + 1 ,v83)));v83=(v198 + v196) -1 ;local v199=0;for v228=v196,v83 do local v229=0;while true do if (v229==0) then v199=v199 + 1 ;v88[v228]=v197[v199];break;end end end elseif (v91==77) then v88[v90[7 -5 ]][v90[3]]=v88[v90[4]];else v88[v90[2]]=v88[v90[3]];end elseif (v91<=79) then v88[v90[7 -5 ]]=v90[3] + v88[v90[4]] ;elseif (v91>80) then local v309=0;local v310;while true do if (0==v309) then v310=v90[2];v88[v310](v21(v88,v310 + 1 ,v90[862 -(814 + 45) ]));break;end end else v88[v90[2]]=v88[v90[3]];end elseif (v91<=87) then if (v91<=84) then if (v91<=82) then local v201=v90[2];local v202,v203=v81(v88[v201]());v83=(v203 + v201) -1 ;local v204=0;for v230=v201,v83 do v204=v204 + 1 ;v88[v230]=v202[v204];end elseif (v91==83) then local v313=0;local v314;local v315;local v316;local v317;while true do if (v313==1) then v83=(v316 + v314) -1 ;v317=0;v313=2;end if (v313==2) then for v441=v314,v83 do local v442=0;while true do if (0==v442) then v317=v317 + 1 ;v88[v441]=v315[v317];break;end end end break;end if (v313==0) then v314=v90[2];v315,v316=v81(v88[v314](v21(v88,v314 + 1 ,v90[3])));v313=1;end end else local v318=0;local v319;while true do if (0==v318) then v319=v90[2];v88[v319](v21(v88,v319 + 1 ,v90[3]));break;end end end elseif (v91<=85) then local v205=v90[2];v88[v205]=v88[v205](v21(v88,v205 + 1 ,v90[3]));elseif (v91>86) then v88[v90[2]]= #v88[v90[3]];else local v321=v90[2];local v322,v323=v81(v88[v321](v21(v88,v321 + 1 ,v83)));v83=(v323 + v321) -1 ;local v324=0;for v359=v321,v83 do local v360=0;while true do if (v360==0) then v324=v324 + 1 ;v88[v359]=v322[v324];break;end end end end elseif (v91<=90) then if (v91<=88) then local v207=0;local v208;while true do if (v207==0) then v208=v90[2];v88[v208]=v88[v208](v21(v88,v208 + 1 ,v83));break;end end elseif (v91==89) then if  not v88[v90[2]] then v82=v82 + (2 -1) ;else v82=v90[3];end elseif (v90[2]==v88[v90[4]]) then v82=v82 + 1 + 0 ;else v82=v90[3];end elseif (v91<=91) then v88[v90[2]][v90[3]]=v90[4];elseif (v91>92) then v88[v90[2]]();elseif (v88[v90[2]]==v88[v90[4]]) then v82=v82 + 1 ;else v82=v90[3];end v82=v82 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.19) ~  Much Love, Ferib 

]]--
